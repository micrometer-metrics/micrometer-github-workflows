------------------------------------------------------------
Root project 'micrometer'
------------------------------------------------------------

Root project 'micrometer'
+--- Project ':concurrency-tests' - Application monitoring instrumentation facade
+--- Project ':docs' - Micrometer Docs
+--- Project ':micrometer-benchmarks-core' - Application monitoring instrumentation facade
+--- Project ':micrometer-bom' - Micrometer BOM (Bill of Materials) for managing Micrometer artifact versions
+--- Project ':micrometer-commons' - Module containing common code
+--- Project ':micrometer-core' - Core module of Micrometer containing instrumentation API and implementation
+--- Project ':micrometer-jakarta9' - Module for Jakarta 9+ based instrumentations
+--- Project ':micrometer-java11' - Micrometer core classes that require Java 11
+--- Project ':micrometer-jetty11' - Micrometer instrumentation for Jetty 11
+--- Project ':micrometer-jetty12' - Micrometer instrumentation for Jetty 12
+--- Project ':micrometer-observation' - Module containing Observation related code
+--- Project ':micrometer-observation-test' - Test compatibility kit for extensions of Micrometer Observation
+--- Project ':micrometer-osgi-test' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-appoptics' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-atlas' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-azure-monitor' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-cloudwatch2' - MeterRegistry implementation for publishing to CloudWatch using the AWS SDK v2.
+--- Project ':micrometer-registry-datadog' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-dynatrace' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-elastic' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-ganglia' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-graphite' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-health' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-humio' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-influx' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-jmx' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-kairos' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-new-relic' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-opentsdb' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-otlp' - Publishes Micrometer meters in OTLP format
+--- Project ':micrometer-registry-prometheus' - MeterRegistry implementation for Prometheus using io.prometheus:prometheus-metrics-core. If you have compatibility issues with this module, you can go back to io.micrometer:micrometer-registry-prometheus-simpleclient that uses io.prometheus:simpleclient_common.
+--- Project ':micrometer-registry-prometheus-simpleclient' - MeterRegistry implementation for Prometheus using io.prometheus:simpleclient_common. This module is deprecated in favor of io.micrometer:micrometer-registry-prometheus that uses io.prometheus:prometheus-metrics-core.
+--- Project ':micrometer-registry-signalfx' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-stackdriver' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-statsd' - Application monitoring instrumentation facade
+--- Project ':micrometer-registry-wavefront' - MeterRegistry implementation for Wavefront. This module is deprecated due to Wavefront's End of Life Announcement.
+--- Project ':micrometer-samples-boot2' - Application monitoring instrumentation facade
+--- Project ':micrometer-samples-boot2-reactive' - Application monitoring instrumentation facade
+--- Project ':micrometer-samples-core' - Application monitoring instrumentation facade
+--- Project ':micrometer-samples-hazelcast' - Application monitoring instrumentation facade
+--- Project ':micrometer-samples-hazelcast3' - Application monitoring instrumentation facade
+--- Project ':micrometer-samples-javalin' - Application monitoring instrumentation facade
+--- Project ':micrometer-samples-jersey3' - Application monitoring instrumentation facade
+--- Project ':micrometer-samples-jetty12' - Application monitoring instrumentation facade
+--- Project ':micrometer-samples-jooq' - Application monitoring instrumentation facade
+--- Project ':micrometer-samples-kotlin' - Application monitoring instrumentation facade
+--- Project ':micrometer-samples-spring-integration' - Application monitoring instrumentation facade
+--- Project ':micrometer-test' - Test compatibility kit for extensions of Micrometer
+--- Project ':micrometer-test-aspectj-ctw' - Application monitoring instrumentation facade
\--- Project ':micrometer-test-aspectj-ltw' - Application monitoring instrumentation facade

To see a list of the tasks of a project, run gradlew <project-path>:tasks
For example, try running gradlew :concurrency-tests:tasks

Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

For more on this, please refer to https://docs.gradle.org/8.6/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.

BUILD SUCCESSFUL in 12s
1 actionable task: 1 executed
